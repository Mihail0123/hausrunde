"""
Django settings for src project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
import sys

from dotenv import load_dotenv
from pathlib import Path
from datetime import timedelta

load_dotenv()


def _bool(v: str | None, default=False):
    if v is None:
        return default
    return v.lower() in {'1', 'true', 'yes', 'on'}

SECRET_KEY = os.getenv("DJANGO_SECRET_KEY")

if not SECRET_KEY:
    raise Exception("SECRET_KEY env var not found. Set it in .env file")

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# --- DEBUG / HOSTS ---
DEBUG = _bool(os.getenv("DEBUG"), True)
ALLOWED_HOSTS = [h.strip() for h in os.getenv("ALLOWED_HOSTS", "").split(",") if h.strip()]
if DEBUG:
    for h in ("127.0.0.1", "localhost", "testserver"):
        if h not in ALLOWED_HOSTS:
            ALLOWED_HOSTS.append(h)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'src.users',
    'src.ads',
    'rest_framework',
    'rest_framework_simplejwt.token_blacklist',
    'drf_spectacular',
    'drf_spectacular_sidecar',
    'django_filters',
    'django_extensions',
]

AUTH_USER_MODEL = 'users.CustomUser'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'src.users.middleware.JWTAuthCookieMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]

ROOT_URLCONF = 'src.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "src" / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'src.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST', '127.0.0.1'),
        'PORT': os.getenv('DB_PORT', '3306'),
        'OPTIONS': {
            'charset': 'utf8mb4',
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [BASE_DIR / "src" / "static"]

# user media uploads

# --- Image constraints ---
AD_IMAGES_MAX_PER_AD = 20          # max photos per ad
AD_IMAGE_MAX_MB = 5                # max file size in MB
AD_IMAGE_ALLOWED_FORMATS = {"JPEG", "PNG", "WEBP"}  # allowed formats
AD_IMAGE_MAX_WIDTH = 6000          # max width in pixels
AD_IMAGE_MAX_HEIGHT = 6000         # max height in pixels


MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# --- Ad views_modules / privacy ---
ADS_VIEW_DEDUP_HOURS = int(os.getenv("ADS_VIEW_DEDUP_HOURS", 6))  # dedup window
ADS_ANON_IP_SALT = os.getenv("ADS_ANON_IP_SALT", SECRET_KEY)      # salt for ip hash of anon


# --- Auth cookie flags (used by login/register/middleware) ---
# For local dev over HTTP keep SECURE=False; in production set to True (HTTPS only).
AUTH_COOKIE_SECURE = not DEBUG
# 'Lax' is a good default; use 'Strict' if frontend is same-site and you want stronger CSRF posture.
AUTH_COOKIE_SAMESITE = 'Lax'
# Override if you need a specific cookie domain/path; by default use current host and root path.
AUTH_COOKIE_DOMAIN = None
AUTH_COOKIE_PATH = '/'

CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.locmem.LocMemCache",
        "LOCATION": "hausrunde-throttle-cache",
    }
}

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.OrderingFilter',
    ),
    # Throttling
    'DEFAULT_THROTTLE_CLASSES': (
        'rest_framework.throttling.UserRateThrottle',
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.ScopedRateThrottle',
    ),
    'DEFAULT_THROTTLE_RATES': {
        # Baseline limits
        'user': '1000/day',
        'anon': '200/day',
        # Scoped limits
        'ads_list': '1000/min',
        'ads_retrieve': '2000/min',
        'ads_availability': '1000/min',
        'adimage_upload': '100/min',
        'adimage_replace': '100/min',
        'bookings_mutation': '300/hour',
        'auth_login': '10/min',
        'auth_register': '60/hour',
        'auth_debug': '60/min',
        'search_top': '30/min',
    },
}

if 'test' in sys.argv:
    REST_FRAMEWORK['DEFAULT_THROTTLE_RATES']['ads_list'] = '2/min'
    REST_FRAMEWORK['DEFAULT_THROTTLE_RATES']['ads_availability'] = '2/min'
    REST_FRAMEWORK['DEFAULT_THROTTLE_RATES']['auth_login'] = '2/min'

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=180),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
    'AUTH_HEADER_TYPES': ('Bearer',),
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'Hausrunde API',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
    'SWAGGER_UI_DIST': 'SIDECAR',
    'SWAGGER_UI_FAVICON_HREF': 'SIDECAR',
    'REDOC_DIST': 'SIDECAR',
    'SWAGGER_UI_SETTINGS': {
        'persistAuthorization': True,
        'displayRequestDuration': True,
    },
    'TAGS': [
        {"name": "auth",     "description": "Registration, login, logout, token debug"},
        {"name": "ads",      "description": "Ads catalog, images, availability, filters"},
        {"name": "bookings", "description": "Booking workflow: create/confirm/reject/cancel"},
        {"name": "reviews",  "description": "Tenant reviews for ads"},
        {"name": "search",   "description": "Aggregated search stats"},
    ],
}